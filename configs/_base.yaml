env:
  _type_: env
  global_config: ???
  seed: ???
  n_users: ???
  n_items: ???
  max_episode_len: [50, 10]
  embeddings: ???
  user_state: ???

user_states:
  default:
    _type_: env.user_state
    # NB: these params are too complicated to auto-resolve
    # user_id: ???
    # embeddings: ???
    # rng: ???
    base_satiation: 0.15
    base_satiation_speed: [0.04, .4]
    satiation_drift: .2
    item_listening_trace_decay: .9
    item_repeat_penalty_power: .15
    early_stop_min_prob: 0.008
    early_stop_delta: 0.008
    similarity_metric: l2
    item_to_cluster_classification: softmax
    relevance_boosting: [0.2, 4.0]
    boosting_softness: [2.0, 3.0]
    discrete_actions:
      - [0.2, 0.08]
      - [0.37, 0.1]
      - [0.58, 0.03]
      - [0.75, 0.05]
    deterministic_actions: False
    deterministic_early_stop: False

models:
  # DISCRETE
  discrete_random:
    _type_: model.discrete_random

  discrete_bc:
    _base_: discrete_bc_default
#    learning_rate: 5e-4
    encoder_factory: ???
    use_gpu: ???
  discrete_bc_default:
    _type_: model.discrete_bc
    learning_rate: 1e-3
    encoder_factory: default
    batch_size: 100
    n_frames: 1
    beta: 0.5

  discrete_cql:
    _base_: discrete_cql_default
    encoder_factory: ???
    use_gpu: ???
  discrete_cql_default:
    _type_: model.discrete_cql
    learning_rate: 6.25e-5
    encoder_factory: default
    q_func_factory: mean
    batch_size: 32
    n_frames: 1
    n_steps: 1
    gamma: 0.99
    n_critics: 1
    target_update_interval: 8000

  discrete_sac:
    _base_: discrete_sac_default
    actor_encoder_factory: ???
    critic_encoder_factory: ???
    use_gpu: ???
  discrete_sac_default:
    _type_: model.discrete_sac
    actor_learning_rate: 3e-4
    critic_learning_rate: 3e-4
    temp_learning_rate: 3e-4
    actor_encoder_factory: default
    critic_encoder_factory: default
    q_func_factory: mean
    batch_size: 64
    n_frames: 1
    n_steps: 1
    gamma: 0.99
    n_critics: 2
    initial_temperature: 1.0
    target_update_interval: 8000

  sdac:
    _base_: sdac_default
    actor_encoder_factory: ???
    critic_encoder_factory: ???
    use_gpu: ???
  sdac_default:
    _type_: model.sdac
    actor_learning_rate: 3e-4
    critic_learning_rate: 3e-4
    temp_learning_rate: 3e-4
    actor_encoder_factory: default
    critic_encoder_factory: default
    q_func_factory: mean
    batch_size: 256
    n_frames: 1
    n_steps: 1
    gamma: 0.99
    tau: 0.005
    n_critics: 2
    initial_temperature: 1.0

  # CONTINUOUS
  random:
    _type_: model.random
  cql:
    _base_: cql_default
    actor_learning_rate: 1e-3
    critic_learning_rate: 3e-3
    actor_encoder_factory: ???
    critic_encoder_factory: ???
    batch_size: 64
    use_gpu: ???
  cql_default:
    _type_: model.cql
    actor_learning_rate: 1e-4
    critic_learning_rate: 3e-4
    temp_learning_rate: 1e-4
    alpha_learning_rate: 1e-4
    actor_encoder_factory: default
    critic_encoder_factory: default
    q_func_factory: mean
    batch_size: 256
    n_frames: 1
    n_steps: 1
    gamma: 0.99
    tau: 0.005
    n_critics: 2
    initial_temperature: 1.0
    initial_alpha: 1.0
    alpha_threshold: 10.0
    conservative_weight: 5.0
    n_action_samples: 10
    soft_q_backup: False
  bc:
    _type_: model.bc
    learning_rate: 5e-4
    FILL_DEFAULTS: FROM D3RLPY
    use_gpu: ???
  ddpg:
    _type_: model.ddpg
    temp_learning_rate: 1e-4
    initial_temperature: 1.0
    FILL_DEFAULTS: FROM D3RLPY
    use_gpu: ???
  sac:
    _base_: sac_default
    use_gpu: ???
  sac_default:
    _type_: model.sac
    actor_learning_rate: 3e-4
    critic_learning_rate: 3e-4
    temp_learning_rate: 3e-4
    actor_encoder_factory: default
    critic_encoder_factory: default
    q_func_factory: mean
    batch_size: 256
    n_frames: 1
    n_steps: 1
    gamma: 0.99
    tau: 0.005
    n_critics: 2
    initial_temperature: 1.0

embeddings:
  random:
    _type_: env.embeddings.random
    seed: ???
    n_dims: ???

  clusters:
    _type_: env.embeddings.clusters
    seed: ???
    n_dims: ???
    n_clusters: 4
    # all clusters have equal weight == 1 by default;
    # increasing cluster's weight linearly increases probability to sample element from it
    cluster_sampling_weight:
      0: 1
    intra_cluster_noise_scale: 0.05
    n_dissimilar_dims_required: 3
    min_dim_delta: 0.3
    min_l2_dist: 0.1
    max_generation_tries: 20000

  10_clusters_for_8_dims:
    _base_: clusters
    n_clusters: 10
    intra_cluster_noise_scale: 0.15
    min_l2_dist: 0.3

  20_clusters_for_8_dims:
    _base_: clusters
    n_clusters: 20
    intra_cluster_noise_scale: 0.15
    n_dissimilar_dims_required: 2
    min_dim_delta: 0.25
    min_l2_dist: 0.3

  20_clusters_for_12_dims:
    _base_: clusters
    n_clusters: 20
    intra_cluster_noise_scale: 0.15
    min_l2_dist: 0.3

  50_clusters_for_12_dims:
    _base_: clusters
    n_clusters: 50
    intra_cluster_noise_scale: 0.15
    n_dissimilar_dims_required: 2
    min_dim_delta: 0.25
    min_l2_dist: 0.3

pipeline_setups:
  single_epoch:
    meta_epochs: 1
    fix_generator: true
    accumulate_data: false
    retrain: true

  data_hungry:
    meta_epochs: 4
    fix_generator: true
    accumulate_data: true
    retrain: true

  hard_incremental_learning:
    meta_epochs: 4
    fix_generator: false
    accumulate_data: false
    retrain: false

  hard_exploration:
    meta_epochs: 4
    fix_generator: false
    accumulate_data: false
    retrain: true

  accumulative_retraining:
    meta_epochs: 4
    fix_generator: false
    accumulate_data: true
    retrain: true

  soft_incremental_learning:
    meta_epochs: 4
    fix_generator: false
    accumulate_data: true
    retrain: false

generation_phase_setups:
  default:
    episodes: ...
    use_cache: false
  small:
    _base_: default
    samples: 4000
  half:
    _base_: default
    samples: 10000
  full:
    _base_: default
    samples: 25000

learning_phase_setups:
  small:
    epochs: 40
  full:
    epochs: 100

evaluation_phase_setups:
  default:
    track_users: [0, 1, 2]
  small:
    _base_: default
    schedule: 10
    episodes: 40
    user_episodes: 10
  full:
    _base_: default
    schedule: 20
    episodes: 100
    user_episodes: 20


# additional params for wandb.init
wandb_init:
  log: ???
  project: ???
  config: ???
  name: ...
  group: ...
